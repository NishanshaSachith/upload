 Try to create the following star patterns using nested for loops for a given number.
If given number = 4
a.
      *
      * *
      * * *
      * * * *

using System;

class Program
{
    static void Main()
    {
        int n = 4;

        for (int i = 0; i < n; i++)
        {
            for (int j = 0; j < n - i; j++)
            {
                Console.Write(" ");
            }

            for (int k = 0; k <= i; k++)
            {
                Console.Write("* ");
            }

            Console.WriteLine();
        }
    }
}

b.
      * * * *
      * * *
      * *
      *
  using System;

class Program
{
    static void Main()
    {
        int n = 4; // Replace with the desired number of rows

        // Print the lower half of the pattern
        for (int i = n ; i >= 1; i--)
        {
            for (int j = 1; j <= n - i; j++)
            {
                Console.Write(" ");
            }

            for (int j = 1; j <= i; j++)
            {
                Console.Write("* ");
            }

            Console.WriteLine();
        }
    }
}

c.
      *
      * *
      * * *
      * * * *
      * * *
      * *
      *
using System;

class Program
{
    static void Main()
    {
        int n = 4;

        // Print the upper half of the pattern
        for (int i = 1; i <= n; i++)
        {
            for (int j = n - i; j >= 1; j--)
            {
                Console.Write(" ");
            }

            for (int j = 0; j < i; j++)
            {
                Console.Write("* ");
            }

            Console.WriteLine();
        }

        // Print the lower half of the pattern
        for (int i = n - 1; i >= 1; i--)
        {
            for (int j = n - i; j >= 1; j--)
            {
                Console.Write(" ");
            }

            for (int j = 0; j < i; j++)
            {
                Console.Write("* ");
            }

            Console.WriteLine();
        }
    }
}

using System;

class Program
{
    static void Main()
    {
        Console.WriteLine("Enter a number:");
        int n = int.Parse(Console.ReadLine());

        // Print the upper half of the pattern
        for (int i = 1; i <= n; i++)
        {
            for (int j = n - i; j >= 1; j--)
            {
                Console.Write(" ");
            }

            for (int j = 0; j < i; j++)
            {
                Console.Write("* ");
            }

            Console.WriteLine();
        }

        // Print the lower half of the pattern
        for (int i = n - 1; i >= 1; i--)
        {
            for (int j = n - i; j >= 1; j--)
            {
                Console.Write(" ");
            }

            for (int j = 0; j < i; j++)
            {
                Console.Write("* ");
            }

            Console.WriteLine();
        }
    }
}
d.
      *
      **
      ***
      ****
      ***
      **
      *

using System;

class Program
{
    static void Main()
    {
        int n = 4;

        // Print the upper half of the pattern
        for (int i = 1; i <= n; i++)
        {
            for (int j = 0; j < i; j++)
            {
                Console.Write("*");
            }

            Console.WriteLine();
        }

        // Print the lower half of the pattern
        for (int i = n - 1; i >= 1; i--)
        {
            for (int j = 0; j < i; j++)
            {
                Console.Write("*");
            }

            Console.WriteLine();
        }
    }
}

using System;

class Program
{
    static void Main()
    {
        Console.WriteLine("Enter a number:");
        int n = int.Parse(Console.ReadLine());

        // Print the upper half of the pattern
        for (int i = 1; i <= n; i++)
        {
            for (int j = 0; j < i; j++)
            {
                Console.Write("*");
            }

            Console.WriteLine();
        }

        // Print the lower half of the pattern
        for (int i = n - 1; i >= 1; i--)
        {
            for (int j = 0; j < i; j++)
            {
                Console.Write("*");
            }

            Console.WriteLine();
        }
    }
}
